name: Node.js Todo App CI/CD Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  IMAGE_NAME: nodejs-todo-app

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Build Docker image
      run: docker build -t $DOCKERHUB_USERNAME/$IMAGE_NAME .
      
    - name: Log in to Docker Hub
      run: echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      
    - name: Push Docker image
      run: |
        docker tag $DOCKERHUB_USERNAME/$IMAGE_NAME $DOCKERHUB_USERNAME/$IMAGE_NAME:latest
        docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:latest
    
    - name: Deploy to server (example)
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
      run: |
        echo "$SSH_PRIVATE_KEY" > key.pem
        chmod 600 key.pem
        ssh -i key.pem -o StrictHostKeyChecking=no ubuntu@$SERVER_IP \
          "docker pull $DOCKERHUB_USERNAME/$IMAGE_NAME:latest && \
          docker stop todo-app || true && \
          docker rm todo-app || true && \
          docker run -d -p 3000:3000 --name todo-app $DOCKERHUB_USERNAME/$IMAGE_NAME:latest"